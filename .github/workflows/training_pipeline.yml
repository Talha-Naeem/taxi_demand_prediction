name: training-pipeline

on:
    schedule:
    - cron: '0 0 * * 0'
  
    workflow_dispatch:

env:
  PYTHON_VERSION: 3.12.7
  UV_VERSION: 0.6.6
  UV_URL: https://github.com/astral-sh/uv/releases/download/${{ env.UV_VERSION }}/uv-${{ env.UV_VERSION }}-py3-none-any.whl

jobs:

    training_pipeline:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout
          uses: actions/checkout@v4

        # UV cache depends on OS, Python version and UV version.
        - name: Cache UV cache
          uses: actions/cache@v4
    
          with:
            path: ~/.cache/pyuv
            key: uv-cache-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ env.UV_VERSION }}
        
        # virtualenv cache should depends on OS, Python version and `uv.lock` (and optionally workflow files).
        - name: Cache Packages
          uses: actions/cache@v4
          with:
            path: ~/.local
            key: uv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/uv.lock') }}-${{ hashFiles('.github/workflows/*.yml') }}
        
        - name: Set up Python ${{ env.PYTHON_VERSION }}
          uses: actions/setup-python@v4
          with:
            python-version: ${{ env.PYTHON_VERSION }}

        - name: Install UV
          run: |
            curl -sSL ${{ env.UV_URL }} | python - --version ${{ env.UV_VERSION }}
            echo "$HOME/.local/bin" >> $GITHUB_PATH

        - name: Install Dependencies
          run: uv sync

        - name: Run training script
          env:
            HOPSWORKS_PROJECT_NAME: ${{ secrets.HOPSWORKS_PROJECT_NAME }} 
            HOPSWORKS_API_KEY: ${{ secrets.HOPSWORKS_API_KEY }}
            DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
            COMET_ML_API_KEY: ${{ secrets.COMET_ML_API_KEY }}
            COMET_ML_WORKSPACE: ${{ secrets.COMET_ML_WORKSPACE }}
            COMET_ML_PROJECT_NAME: ${{ secrets.COMET_ML_PROJECT_NAME }}
          run: make training
